import{_ as p,C as e,c as k,o as r,j as i,az as l,a,G as t,w as h}from"./chunks/framework.C2tjyrW2.js";const B=JSON.parse('{"title":"Errors and exceptions","description":"","frontmatter":{},"headers":[],"relativePath":"source/src/types/exceptions.md","filePath":"source/src/types/exceptions.md","lastUpdated":null}'),o={name:"source/src/types/exceptions.md"},d={class:"jldocstring custom-block"},E={class:"jldocstring custom-block"};function g(y,s,F,c,C,u){const n=e("Badge");return r(),k("div",null,[s[8]||(s[8]=i("h1",{id:"Errors-and-exceptions",tabindex:"-1"},[a("Errors and exceptions "),i("a",{class:"header-anchor",href:"#Errors-and-exceptions","aria-label":'Permalink to "Errors and exceptions {#Errors-and-exceptions}"'},"â€‹")],-1)),s[9]||(s[9]=i("p",null,"We create a few custom exception types in this file, that have nice show methods that we can use for certain errors.",-1)),s[10]||(s[10]=i("p",null,[a("This makes it substantially easier to catch specific kinds of errors and show them. For example, we can catch "),i("code",null,"WrongManifoldException"),a(" and show a nice error message, and error hinters can be specialized to that as well.")],-1)),s[11]||(s[11]=i("p",null,"We also have a custom error type for missing keywords in an algorithm, which could eventually be extended to have typo detection, et cetera.",-1)),i("details",d,[i("summary",null,[s[0]||(s[0]=i("a",{id:"GeometryOpsCore.WrongManifoldException-source-src-types-exceptions",href:"#GeometryOpsCore.WrongManifoldException-source-src-types-exceptions"},[i("span",{class:"jlbinding"},"GeometryOpsCore.WrongManifoldException")],-1)),s[1]||(s[1]=a()),t(n,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[3]||(s[3]=l("",3)),t(n,{type:"info",class:"source-link",text:"source"},{default:h(()=>[...s[2]||(s[2]=[i("a",{href:"https://github.com/JuliaGeo/GeometryOps.jl/blob/518369e422c081ae9144241b23f7891402c5063b/GeometryOpsCore/src/types/exceptions.jl#L26-L32",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",E,[i("summary",null,[s[4]||(s[4]=i("a",{id:"GeometryOpsCore.MissingKeywordInAlgorithmException-source-src-types-exceptions",href:"#GeometryOpsCore.MissingKeywordInAlgorithmException-source-src-types-exceptions"},[i("span",{class:"jlbinding"},"GeometryOpsCore.MissingKeywordInAlgorithmException")],-1)),s[5]||(s[5]=a()),t(n,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[7]||(s[7]=l("",9)),t(n,{type:"info",class:"source-link",text:"source"},{default:h(()=>[...s[6]||(s[6]=[i("a",{href:"https://github.com/JuliaGeo/GeometryOps.jl/blob/518369e422c081ae9144241b23f7891402c5063b/GeometryOpsCore/src/types/exceptions.jl#L60-L86",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s[12]||(s[12]=l("",5))])}const f=p(o,[["render",g]]);export{B as __pageData,f as default};
