name: CI
on:
  push:
    branches:
      - main
    tags: ['*']
  pull_request:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.10'
          - '1'
          - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
        include:
          - os: windows-latest
            version: '1'
            arch: x64
          - os: macos-latest
            version: '1'
            arch: arm64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/cache@v1
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
      - name: Dev GeometryOpsCore and add other packages
        run: julia --project=. -e 'using Pkg; Pkg.develop(; path = joinpath(".", "GeometryOpsCore"));'
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
        with:
          directories: src,ext
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: JuliaGeo/GeometryOps.jl
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    permissions:
      contents: write
      statuses: write
      actions: write
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/cache@v1
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - name: Build and add versions
        run: julia --project=docs -e 'using Pkg; Pkg.add([PackageSpec(name = "GeoMakie", rev = "master"), PackageSpec(name = "GeometryOpsCore", path = "./GeometryOpsCore"), PackageSpec(name = "GeometryOps", path = ".")])'
      - uses: julia-actions/julia-docdeploy@v1
        with:
          install-package: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
  doctests:
    name: Doctests
    runs-on: ubuntu-latest
    permissions:
      contents: write
      statuses: write
      actions: write
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/cache@v1
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - name: Build and add versions
        run: julia --project=docs -e 'using Pkg; Pkg.add([PackageSpec(name = "GeoMakie", rev = "master"), PackageSpec(name = "GeometryOpsCore", path = "./GeometryOpsCore"), PackageSpec(name = "GeometryOps", path = ".")])'
      - run: |
          julia --project=docs -e '
            using Documenter: DocMeta, doctest
            using GeometryOps
            DocMeta.setdocmeta!(GeometryOps, :DocTestSetup, :(using GeometryOps); recursive=true)
            doctest(GeometryOps)'
